[build-system]
requires = ["setuptools>=61.0.0", "wheel>=0.37.0"]
build-backend = "setuptools.build_meta"

[project]
name = "nagios-plugins-collection"
version = "1.2.0"
description = "A collection of enterprise-grade Nagios plugins for monitoring various systems"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Thomas Vincent", email = "thomasvincent@gmail.com"}
]
maintainers = [
    {name = "Thomas Vincent", email = "thomasvincent@gmail.com"}
]
keywords = ["nagios", "monitoring", "plugins", "health", "check"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Systems Administration",
]
dependencies = [
    # Core dependencies needed by all plugins
    "httpx>=0.26.0",
    "rich>=13.7.0",
]

# Optional dependencies grouped by functionality
[project.optional-dependencies]
mongodb = [
    "pymongo>=4.6.0",
]
ssh = [
    "paramiko>=3.0.0",
]
cli = [
    "typer>=0.9.0",
]
schema = [
    "pydantic>=2.5.0",
]
legacy = [
    "pexpect>=4.9.0",
]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-asyncio>=0.21.0",
    "tox>=4.11.0",
    "black>=23.11.0",
    "isort>=5.12.0",
    "pylint>=3.0.0",
    "mypy>=1.7.0",
    "flake8>=6.1.0",
    "pydocstyle>=6.3.0",
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=1.3.0",
    "build>=1.0.0",
    "twine>=4.0.2",
]
security = [
    "bandit>=1.7.5",
    "safety>=2.3.5",
]
all = [
    "nagios-plugins-collection[mongodb,ssh,cli,schema,legacy,dev,security]",
]

[project.scripts]
# Standard plugins following the new framework
check_website_status = "nagios_plugins.plugins.check_website_status:main"
check_component_status = "nagios_plugins.plugins.check_component_status:main" 
check_mongodb_health = "nagios_plugins.plugins.check_mongodb_health:main"
check_ro_mounts = "nagios_plugins.plugins.check_ro_mounts:main"

# Legacy plugins
check_monghealth = "nagios_plugins.plugins.check_monghealth:main"
check_hadoop = "nagios_plugins.plugins.check_hadoop:main"
check_dig = "nagios_plugins.plugins.check_dig:main"
check_jobs = "nagios_plugins.plugins.check_jobs:main"

[project.urls]
"Homepage" = "https://github.com/thomasvincent/nagios-plugins-collection"
"Bug Tracker" = "https://github.com/thomasvincent/nagios-plugins-collection/issues"
"Documentation" = "https://nagios-plugins-collection.readthedocs.io/"

[tool.black]
line-length = 100
target-version = ["py38", "py39", "py310", "py311", "py312"]

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
plugins = ["pydantic.mypy"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
markers = [
    "unit: unit tests",
    "integration: integration tests",
]

[tool.bandit]
exclude_dirs = ["tests", "docs"]
skips = ["B101"]

[tool.pylint]
max-line-length = 100
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "C0330",  # bad-continuation
    "C0326",  # bad-whitespace
    "W0511",  # fixme
]